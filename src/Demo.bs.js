// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var React = require("react");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var ReactDOMRe = require("reason-react/src/ReactDOMRe.js");

function determinarGanador(tablero) {
  console.log(tablero);
  if (tablero.length !== 9) {
    return /* Iniciada */Block.__(0, [
              /* Circulo */1,
              tablero
            ]);
  } else {
    var match = tablero[0];
    var exit = 0;
    var exit$1 = 0;
    var exit$2 = 0;
    var exit$3 = 0;
    var exit$4 = 0;
    if (match !== undefined) {
      var j1 = match;
      var match$1 = tablero[1];
      if (match$1 !== undefined) {
        var j2 = match$1;
        var match$2 = tablero[2];
        if (match$2 !== undefined && j1 === j2 && j2 === match$2) {
          return /* Terminada */Block.__(1, [j1]);
        } else {
          exit$4 = 5;
        }
      } else {
        exit$4 = 5;
      }
    } else {
      exit$4 = 5;
    }
    if (exit$4 === 5) {
      var match$3 = tablero[3];
      var exit$5 = 0;
      if (match$3 !== undefined) {
        var j1$1 = match$3;
        var match$4 = tablero[4];
        if (match$4 !== undefined) {
          var j2$1 = match$4;
          var match$5 = tablero[5];
          if (match$5 !== undefined && j1$1 === j2$1 && j2$1 === match$5) {
            return /* Terminada */Block.__(1, [j1$1]);
          } else {
            exit$5 = 6;
          }
        } else {
          exit$5 = 6;
        }
      } else {
        exit$5 = 6;
      }
      if (exit$5 === 6) {
        var match$6 = tablero[6];
        if (match$6 !== undefined) {
          var j1$2 = match$6;
          var match$7 = tablero[7];
          if (match$7 !== undefined) {
            var j2$2 = match$7;
            var match$8 = tablero[8];
            if (match$8 !== undefined && j1$2 === j2$2 && j2$2 === match$8) {
              return /* Terminada */Block.__(1, [j1$2]);
            } else {
              exit$3 = 4;
            }
          } else {
            exit$3 = 4;
          }
        } else {
          exit$2 = 3;
        }
      }
      
    }
    if (exit$3 === 4) {
      if (match !== undefined) {
        var j1$3 = match;
        var match$9 = tablero[3];
        if (match$9 !== undefined) {
          var j2$3 = match$9;
          var match$10 = tablero[6];
          if (j1$3 === j2$3 && j2$3 === match$10) {
            return /* Terminada */Block.__(1, [j1$3]);
          } else {
            exit$2 = 3;
          }
        } else {
          exit$2 = 3;
        }
      } else {
        exit$2 = 3;
      }
    }
    if (exit$2 === 3) {
      var match$11 = tablero[1];
      var exit$6 = 0;
      if (match$11 !== undefined) {
        var j1$4 = match$11;
        var match$12 = tablero[4];
        if (match$12 !== undefined) {
          var j2$4 = match$12;
          var match$13 = tablero[7];
          if (match$13 !== undefined && j1$4 === j2$4 && j2$4 === match$13) {
            return /* Terminada */Block.__(1, [j1$4]);
          } else {
            exit$6 = 4;
          }
        } else {
          exit$6 = 4;
        }
      } else {
        exit$6 = 4;
      }
      if (exit$6 === 4) {
        var match$14 = tablero[2];
        if (match$14 !== undefined) {
          var j1$5 = match$14;
          var match$15 = tablero[5];
          if (match$15 !== undefined) {
            var j2$5 = match$15;
            var match$16 = tablero[8];
            if (match$16 !== undefined) {
              if (j1$5 === j2$5 && j2$5 === match$16) {
                return /* Terminada */Block.__(1, [j1$5]);
              } else {
                exit$1 = 2;
              }
            } else {
              exit = 1;
            }
          } else {
            exit$1 = 2;
          }
        } else {
          exit$1 = 2;
        }
      }
      
    }
    if (exit$1 === 2) {
      if (match !== undefined) {
        var j1$6 = match;
        var match$17 = tablero[4];
        if (match$17 !== undefined) {
          var j2$6 = match$17;
          var match$18 = tablero[8];
          if (match$18 !== undefined && j1$6 === j2$6 && j2$6 === match$18) {
            return /* Terminada */Block.__(1, [j1$6]);
          } else {
            exit = 1;
          }
        } else {
          return /* Iniciada */Block.__(0, [
                    /* Circulo */1,
                    tablero
                  ]);
        }
      } else {
        exit = 1;
      }
    }
    if (exit === 1) {
      var match$19 = tablero[2];
      if (match$19 !== undefined) {
        var j1$7 = match$19;
        var match$20 = tablero[4];
        if (match$20 !== undefined) {
          var j2$7 = match$20;
          var match$21 = tablero[6];
          if (match$21 !== undefined) {
            if (j1$7 === j2$7 && j2$7 === match$21) {
              return /* Terminada */Block.__(1, [j1$7]);
            } else if (match !== undefined) {
              var match$22 = tablero[1];
              if (match$22 !== undefined) {
                var match$23 = tablero[3];
                if (match$23 !== undefined) {
                  var match$24 = tablero[5];
                  if (match$24 !== undefined) {
                    var match$25 = tablero[7];
                    if (match$25 !== undefined) {
                      var match$26 = tablero[8];
                      if (match$26 !== undefined) {
                        return /* Terminada */Block.__(1, [undefined]);
                      } else {
                        return /* Iniciada */Block.__(0, [
                                  /* Circulo */1,
                                  tablero
                                ]);
                      }
                    } else {
                      return /* Iniciada */Block.__(0, [
                                /* Circulo */1,
                                tablero
                              ]);
                    }
                  } else {
                    return /* Iniciada */Block.__(0, [
                              /* Circulo */1,
                              tablero
                            ]);
                  }
                } else {
                  return /* Iniciada */Block.__(0, [
                            /* Circulo */1,
                            tablero
                          ]);
                }
              } else {
                return /* Iniciada */Block.__(0, [
                          /* Circulo */1,
                          tablero
                        ]);
              }
            } else {
              return /* Iniciada */Block.__(0, [
                        /* Circulo */1,
                        tablero
                      ]);
            }
          } else {
            return /* Iniciada */Block.__(0, [
                      /* Circulo */1,
                      tablero
                    ]);
          }
        } else {
          return /* Iniciada */Block.__(0, [
                    /* Circulo */1,
                    tablero
                  ]);
        }
      } else {
        return /* Iniciada */Block.__(0, [
                  /* Circulo */1,
                  tablero
                ]);
      }
    }
    
  }
}

function turno(estadoPartida, indice) {
  var nuevoEstado;
  if (typeof estadoPartida === "number") {
    var tablero = /* array */[
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined
    ];
    Caml_array.caml_array_set(tablero, indice, /* Cruz */0);
    nuevoEstado = /* Iniciada */Block.__(0, [
        /* Circulo */1,
        tablero
      ]);
  } else if (estadoPartida.tag) {
    nuevoEstado = /* NoIniciada */0;
  } else {
    var jugador = estadoPartida[0];
    var nuevoTablero = $$Array.copy(estadoPartida[1]);
    Caml_array.caml_array_set(nuevoTablero, indice, jugador);
    var nuevoJugador = jugador ? /* Cruz */0 : /* Circulo */1;
    var ganador = determinarGanador(nuevoTablero);
    console.log(ganador);
    nuevoEstado = typeof ganador === "number" || !ganador.tag ? /* Iniciada */Block.__(0, [
          nuevoJugador,
          nuevoTablero
        ]) : ganador;
  }
  return ReactDOMRe.renderToElementWithId(formatoTablero(nuevoEstado), "principal");
}

function formatoTablero(partida) {
  var tablero;
  var exit = 0;
  if (typeof partida === "number" || partida.tag) {
    exit = 1;
  } else {
    tablero = partida[1];
  }
  if (exit === 1) {
    tablero = /* array */[
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined
    ];
  }
  var tableroHtml = $$Array.mapi((function (pos, elem) {
          return formatoJugador(pos, partida, elem);
        }), tablero);
  return ReactDOMRe.createElementVariadic("div", {
              className: "tablero"
            }, tableroHtml);
}

function formatoJugador(pos, partida, jugador) {
  if (jugador !== undefined) {
    if (jugador) {
      return React.createElement("button", {
                  disabled: true
                }, "O");
    } else {
      return React.createElement("button", {
                  disabled: true
                }, "X");
    }
  } else {
    return React.createElement("button", {
                onClick: (function () {
                    return turno(partida, pos);
                  })
              }, "");
  }
}

function click(pos, partida, _) {
  return turno(partida, pos);
}

ReactDOMRe.renderToElementWithId(formatoTablero(/* NoIniciada */0), "principal");

exports.determinarGanador = determinarGanador;
exports.click = click;
exports.formatoJugador = formatoJugador;
exports.formatoTablero = formatoTablero;
exports.turno = turno;
/*  Not a pure module */
